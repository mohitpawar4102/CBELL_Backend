# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET Microservices CI/CD

on:
  push:
    branches: [ "mohit" ]
  pull_request:
    branches: [ "mohit" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET SDK 9
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    
    - name: Restore dependencies
      run: |
        dotnet restore "CBELL_Candent.sln"
    
    - name: Build
      run: |
        dotnet build "CBELL_Candent.sln" --no-restore --configuration Release
    
    - name: Test
      run: |
        dotnet test "CBELL_Candent.sln" --no-build --configuration Release --verbosity normal

  deploy-local:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/mohit'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET SDK 9
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    
    - name: Publish Authentication Service
      run: |
        dotnet publish "Microservices/Authentication/Authentication.API/Authentication.API.csproj" -c Release -o ./publish/auth
    
    - name: Publish ContentCreator Service
      run: |
        dotnet publish "Microservices/ContentCreator/ContentCreator.API/ContentCreator.API.csproj" -c Release -o ./publish/content
    
    - name: Publish API Gateway
      run: |
        dotnet publish "Gateway/APIGateway/APIGateway.csproj" -c Release -o ./publish/gateway
    
    - name: Deploy to Local Machine
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.LOCAL_HOST }}
        username: ${{ secrets.LOCAL_USERNAME }}
        key: ${{ secrets.LOCAL_SSH_KEY }}
        script: |
          # Stop services
          Stop-Service -Name "auth-service-local" -Force -ErrorAction SilentlyContinue
          Stop-Service -Name "content-service-local" -Force -ErrorAction SilentlyContinue
          Stop-Service -Name "api-gateway-local" -Force -ErrorAction SilentlyContinue
          
          # Copy new files
          Copy-Item -Path "./publish/auth/*" -Destination "C:\Services\auth-service" -Recurse -Force
          Copy-Item -Path "./publish/content/*" -Destination "C:\Services\content-service" -Recurse -Force
          Copy-Item -Path "./publish/gateway/*" -Destination "C:\Services\api-gateway" -Recurse -Force
          
          # Start services
          Start-Service -Name "auth-service-local"
          Start-Service -Name "content-service-local"
          Start-Service -Name "api-gateway-local"

  # deploy-production:
  #   needs: deploy-local
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
  #   steps:
  #   - uses: actions/checkout@v4
    
  #   - name: Setup .NET SDK 9
  #     uses: actions/setup-dotnet@v4
  #     with:
  #       dotnet-version: '9.0.x'
    
  #   - name: Publish Authentication Service
  #     run: |
  #       dotnet publish ./Microservices/Authentication/Authentication.API/Authentication.API.csproj -c Release -o ./publish/auth
    
  #   - name: Publish ContentCreator Service
  #     run: |
  #       dotnet publish ./Microservices/ContentCreator/ContentCreator.API/ContentCreator.API.csproj -c Release -o ./publish/content
    
  #   - name: Publish API Gateway
  #     run: |
  #       dotnet publish ./Gateway/APIGateway/APIGateway.csproj -c Release -o ./publish/gateway
    
  #   - name: Deploy to Production
  #     uses: appleboy/ssh-action@v1.0.3
  #     with:
  #       host: ${{ secrets.PROD_HOST }}
  #       username: ${{ secrets.PROD_USERNAME }}
  #       key: ${{ secrets.PROD_SSH_KEY }}
  #       script: |
  #         cd /path/to/production/deployment
  #         # Stop existing services
  #         systemctl stop auth-service
  #         systemctl stop content-service
  #         systemctl stop api-gateway
          
  #         # Copy new files
  #         rsync -avz ./publish/auth/ /opt/services/auth-service/
  #         rsync -avz ./publish/content/ /opt/services/content-service/
  #         rsync -avz ./publish/gateway/ /opt/services/api-gateway/
          
  #         # Start services
  #         systemctl start auth-service
  #         systemctl start content-service
  #         systemctl start api-gateway
      
